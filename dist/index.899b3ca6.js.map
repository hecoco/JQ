{"mappings":"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","sources":["JQ/src/dom.js"],"sourcesContent":["window.dom = {\r\n    create(string) {\r\n        //dom.create('<div><span>1</span></div>');\r\n        const container = document.createElement('template');\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n    after(node, node2) {//在节点后面增加兄弟节点\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n        // fu.parentNode.appendChild(zi)\r\n    },\r\n    before(node, node2) {//在节点前面增加兄弟节点\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node) {\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node, parent) {//新建父节点\r\n        //先把parent节点插在node节点前面\r\n        dom.before(node, parent)\r\n        //把node节点放入parent里面\r\n        dom.append(parent, node)\r\n    },\r\n    //删\r\n    remove(node) {\r\n        node.parentNode.removeChild(node);\r\n        return node;\r\n    },\r\n    empty(node) {//childNodes的长度是随时变化的\r\n        //const childNodes = node.childNodes;//等于const { childNodes } = node;\r\n        const arr = [];\r\n        // for (let i = 0; i < childNodes.length; i += 0) {\r\n        //     dom.remove(childNodes[i])\r\n        //     arr.push(childNodes[i])\r\n        // }\r\n\r\n        // let i = 0;\r\n        // while (i < childNodes.length) {\r\n        //     dom.remove(childNodes[i])\r\n        //     arr.push(childNodes[i])\r\n        // }\r\n\r\n        let x = node.firstChild;\r\n        while (x) {\r\n            arr.push(dom.remove(node.firstChild))\r\n            x = node.firstChild;//获取不到子节点就为null\r\n        }\r\n        return arr;\r\n    },\r\n\r\n    attr(node, name, value) {//重载\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            console.dir(node.getAttribute(name));\r\n            return node.getAttribute;\r\n        }\r\n    },\r\n    text(node, string) {\r\n        if (arguments.length === 2) {\r\n            'innerText' in node ? node.innerText = string : node.textContent = string;\r\n        } else if (arguments.length === 1) {\r\n            return 'innerText' in node ? node.innerText : node.textContent;\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            node.style[name] = value;\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {//typeof 会返回一个字符串 判断是什么数据类型或者函数\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {//检测该对象的原型链是否有object\r\n                for (let key in name) {//遍历数组\r\n                    node.style[key] = name[key];\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn);\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName.fn)\r\n    },\r\n\r\n    find(selector, scope) {//选择器\r\n        return (scope || document).querySelectorAll(selector);\r\n    },\r\n    parent(node) {//获取父节点\r\n        return node.parentNode;\r\n    },\r\n    children(node) {//获取子节点\r\n        return node.children\r\n    },\r\n    siblings(node) {//获取兄弟节点\r\n        return Array.from(node.parent.children).filter(n => n !== node)\r\n    },\r\n    next(node) {//获取弟弟\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x;\r\n    },\r\n    previous(node) {//获取哥哥\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x;\r\n    },\r\n    each(nodeList, fn) {\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {//获取排名\r\n        const list = dom.children(node.parentNode)\r\n        let i = 0\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i;\r\n    }\r\n};"],"names":[],"version":3,"file":"index.899b3ca6.js.map","sourceRoot":"/__parcel_source_root/"}